
#ifndef _MTrimBoundaryArray
#define _MTrimBoundaryArray
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MTrimBoundaryArray
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MTrimBoundaryArray)
//
//  This class implements an array of MObjects.  Common convenience functions
//  are available, and the implementation is compatible with the internal
//  Maya implementation so that it can be passed efficiently in and out of
//	Maya.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES


#include <maya/MStatus.h>
#include <vector>

// *****************************************************************************

// DECLARATIONS

// *****************************************************************************

// CLASS DECLARATION (MTrimBoundaryArray)

///  An array class for trim boundaries.  An MTrimBoundaryArray object contains a 
///  collection of edges on a trim boundary.  There can be more than one
///  MObjectArray contained in the MTrimBoundaryArray object.
/**

  Implement an array of MTrimBoundary data type.

  This class owns all of the MObjectArrays used in the class. It doesn't
  hold a reference to any other MObjectArray.

*/
#ifdef _WIN32
#pragma warning(disable: 4522)
#endif // _WIN32

class MObjectArray;

class OPENMAYA_EXPORT MTrimBoundaryArray  
{

public:
	///
	MTrimBoundaryArray();
	///
	MTrimBoundaryArray(const MTrimBoundaryArray& other);
	///
	~MTrimBoundaryArray();


	///
	MStatus			reserve(unsigned int length);
	///
 	unsigned int		length() const;
	///
 	unsigned int		size() const;

	///
 	const MObjectArray&	operator[](unsigned int index) const;
	///
	const MObjectArray&	get( unsigned int index ) const;

	///
 	MStatus	set(const MObjectArray& boundary, unsigned int index); 
	///
 	MStatus	insert(const MObjectArray& boundary, unsigned int index);
	///
 	MStatus	append(const MObjectArray& boundary);
	///
 	MStatus	remove(unsigned int index);
	///
 	MStatus	clear();

	///
	MObject	getMergedBoundary(unsigned int index, MStatus *status=NULL) const;

protected:
// No protected members

private:
 	MTrimBoundaryArray& operator = (const MTrimBoundaryArray&) const;
 	MTrimBoundaryArray& operator = (const MTrimBoundaryArray&);

	bool		fIsUVBoundary;
	void*		fBoundaryArray;

	static const char* className();
};

#ifdef _WIN32
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MTrimBoundaryArray */
