
#ifndef _MCommandResult
#define _MCommandResult
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MCommandResult
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MCommandResult)
//
//	An MCommandResult collects the result returned by MGlobal::executeCommand.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES


#include <maya/MStatus.h>
#include <maya/MObject.h>

// *****************************************************************************
// FORWARD DECLARATIONS
class MIntArray;
class MDoubleArray;
class MString;
class MStringArray;
class MVector;
class MVectorArray;
class MMatrix;
// *****************************************************************************

// *****************************************************************************

#ifdef _WIN32
#pragma warning(disable: 4522)
#endif // _WIN32

// CLASS DECLARATION (MCommandResult)

/// Result returned from executing a command.
/**
  An MCommandResult collects the result returned by MGlobal::executeCommand.
*/
class OPENMAYA_EXPORT MCommandResult {

public:
    /// Itemize the mel command result types:
    enum Type {	
	  /// 
	  kInvalid = 0,
	  ///
	  kInt,
	  ///
	  kIntArray,
	  ///
	  kDouble,
	  ///
	  kDoubleArray,
	  ///
	  kString,
	  ///
	  kStringArray,
	  ///
	  kVector,
      ///
      kVectorArray,
	  ///
      kMatrix,
	  ///
      kMatrixArray
	};

    /// 
    MCommandResult(MStatus* ReturnStatus = NULL );
	///
	virtual         ~MCommandResult();
	///
	Type            resultType(MStatus* ReturnStatus = NULL) const;
	///
	MStatus         getResult( int& result) const;
	///
    MStatus         getResult( MIntArray& result) const;
	///
	MStatus         getResult( double& result) const;
	///
	MStatus         getResult( MDoubleArray& result) const;
	///
	MStatus         getResult( MString& result) const;
	///
	MStatus         getResult( MStringArray& result) const;
	///
	MStatus         getResult( MVector& result) const;
	///
	MStatus         getResult( MVectorArray& result) const;
	/// 
	MStatus         getResult( MDoubleArray& result,
							   int &numRows, int &numColumns) const;
protected:
// No protected members

private:
    const char* className() const;
    void *fResult;
};

#ifdef _WIN32
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MCommandResult */
