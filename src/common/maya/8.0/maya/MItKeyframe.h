
#ifndef _MItKeyframe
#define _MItKeyframe
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MItKeyframe
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MItKeyframe)
//
//	In Maya Animation Curves (Anim Curve) are implemented as Dependency Graph
//	(DG) Nodes.  Each Node has multiple ordered and indexed keyframes.
//
//	The Keyframe Iterator provides methods for iterating over, querying and
//	editing the keyframes of a Anim Curve Node.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES


#include <maya/MFn.h>
#include <maya/MStatus.h>
#include <maya/MTime.h>

// *****************************************************************************

// DECLARATIONS

class MObject;
class MPtrBase;

// *****************************************************************************

// CLASS DECLARATION (MItKeyframe)

///  Keyframe Iterator (OpenMayaAnim)
/**

Iterate over the keyframes of a particular Anim Curve Node, and query
and edit the keyframe to which the iterator points.

Determine the time and value of the keyframe, as well as the x,y values
and type of the tangent to the curve entering (in tangent) and leaving
(out tangent) the keyframe.

Set the time and value of the keyframe, and the type of the tangents.

*/
#ifdef _WIN32
#pragma warning(disable: 4522)
#endif // _WIN32

class OPENMAYAANIM_EXPORT MItKeyframe {
public:
	///
	enum TangentType {
		///
		kTangentGlobal = 0,
		///
		kTangentFixed,
		///
		kTangentLinear,
		///
		kTangentFlat,
		///
		kTangentSmooth,
		///
		kTangentStep,
		///
		kTangentSlow,
		///
		kTangentFast,
		///
		kTangentClamped,
		///
		kTangentPlateau,
        ///
        kTangentStepNext
	};
	///
	MItKeyframe( MObject & animCurveNode, MStatus * ReturnStatus = NULL );
	///
	~MItKeyframe();
	///
	MStatus     reset( MObject & animCurveNode );
	///
	MStatus     reset();
	///
	MStatus     next();
	///
	bool        isDone( MStatus * ReturnStatus = NULL );
	///
	MTime       time( MStatus * ReturnStatus = NULL );
	///
	MStatus     setTime( MTime time );
	///
	double      value( MStatus * ReturnStatus = NULL );
	///
	MStatus     setValue( double value );
	///
	TangentType inTangentType( MStatus * ReturnStatus = NULL );
	///
	TangentType outTangentType( MStatus * ReturnStatus = NULL );
	///
	MStatus     setInTangentType( TangentType tangentType );
	///
	MStatus     setOutTangentType( TangentType tangentType );
	///
	MStatus     getTangentOut( float &x, float &y );
	///
	MStatus     getTangentIn( float &x, float &y );
	///
	bool		tangentsLocked( MStatus * ReturnStatus = NULL ) const;
	///
	MStatus		setTangentsLocked( bool locked );

protected:
// No protected members

private:
	static const char* className();
    MPtrBase *        f_ptr;
	unsigned int          f_index;
};

#ifdef _WIN32
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MItKeyframe */
