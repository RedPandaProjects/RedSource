#ifndef _MBoundingBox
#define _MBoundingBox
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MBoundingBox
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MBoundingBox)
//
//	This class provides an implementation of a bounding box.  A bounding box
//  describes a volume in space that bounds a piece of geometry.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES


#include <maya/MTypes.h>
#include <maya/MPoint.h>

// PDB
#if defined(_WIN32)
#undef min
#undef max
#endif // _WIN32

// *****************************************************************************

// DECLARATIONS 

class MMatrix;

// *****************************************************************************

// CLASS DECLARATION (MBoundingBox)

/// implementation of a 3D bounding box
/**
  This class implements a 3D bounding box
*/
#if defined(_WIN32)
#pragma warning(disable: 4522)
#endif // _WIN32

class OPENMAYA_EXPORT MBoundingBox  
{
public:
	///
    MBoundingBox();  
	///
	MBoundingBox( const MBoundingBox & src );  
	///
	MBoundingBox( const MPoint &corner1, const MPoint &corner2 );

	///
	~MBoundingBox();

	///
	void	clear();

	///  
    void	transformUsing ( const MMatrix &matrix );
	///
	void	expand( const MPoint & point );
	/// 
	void	expand( const MBoundingBox & box );
	
	/// 
	bool	contains( const MPoint & point ) const;
	///
	bool    intersects (const MBoundingBox & box, double tol = 0.0 ) const;
	///
	double	width() const;
	///
	double	height() const;
	///
	double	depth() const;
	///
	MPoint	center() const;
	///
	MPoint	min() const;
	///
	MPoint	max() const;

	///
	MBoundingBox & operator=( const MBoundingBox & other );


protected:
// No protected members

private: 
	double data[6];
};

#if defined(_WIN32)
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MBoundingBox */
