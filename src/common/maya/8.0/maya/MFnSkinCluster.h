#ifndef _MFnSkinCluster
#define _MFnSkinCluster
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MFnSkinCluster
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MFnSkinCluster)
//
// MFnSkinCluster is the function set for skinClusters.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES


#include <maya/MFnGeometryFilter.h>
#include <maya/MObject.h>
// *****************************************************************************

// DECLARATIONS
class MObject;
class MDagPath;
class MIntArray;
class MFloatArray;
class MDoubleArray;
class MObjectArray;
class MSelectionList;
class MString;
class MDagPathArray;

// *****************************************************************************

// CLASS DECLARATION (MFnSkinCluster)

/// skinCluster function set (OpenMayaAnim)
/**
MFnSkinCluster is the function set for editing the weights of
skinClusters.
*/
#ifdef _WIN32
#pragma warning(disable: 4522)
#endif // _WIN32

class OPENMAYAANIM_EXPORT MFnSkinCluster : public MFnGeometryFilter
{
	declareMFn(MFnSkinCluster, MFnGeometryFilter);

public:
	///
	MStatus		getWeights(const MDagPath& path,
						   const MObject& components,
						   unsigned int influenceIndex,
						   MDoubleArray& weights) const;
	///
	MStatus		getWeights(const MDagPath& path,
						   const MObject& components,
						   MDoubleArray& weights,
						   unsigned int& influenceCount) const;
	///
	MStatus		setWeights(const MDagPath& path,
						   const MObject& components,
						   unsigned int jointIndex,
						   double value,
						   bool normalize = true,
						   MDoubleArray *oldValues = NULL);
	///
	MStatus		setWeights(const MDagPath& path,
						   const MObject& components,
						   MIntArray& influenceIndices,
						   MDoubleArray& values,
						   bool normalize = true,
						   MDoubleArray *oldValues = NULL);
	///
	MStatus		getPointsAffectedByInfluence(const MDagPath& path,
											 MSelectionList& result,
											 MDoubleArray& weights);
	///
	unsigned int 	indexForInfluenceObject(const MDagPath& path,
										MStatus *ReturnStatus) const;
	///
	unsigned int 	influenceObjects(MDagPathArray& paths,
								 MStatus *ReturnStatus) const;
	///
	MStatus		getWeights(const MDagPath& path,
						   const MObject& components,
						   unsigned int influenceIndex,
						   MFloatArray& weights) const;
	///
	MStatus		getWeights(const MDagPath& path,
						   const MObject& components,
						   MFloatArray& weights,
						   unsigned int& influenceCount) const;
	///
	MStatus		setWeights(const MDagPath& path,
						   const MObject& components,
						   unsigned int jointIndex,
						   float value,
						   bool normalize = true,
						   MFloatArray *oldValues = NULL);
	///
	MStatus		setWeights(const MDagPath& path,
						   const MObject& components,
						   MIntArray& influenceIndices,
						   MFloatArray& values,
						   bool normalize = true,
						   MFloatArray *oldValues = NULL);
	///
	MStatus		getPointsAffectedByInfluence(const MDagPath& path,
											 MSelectionList& result,
											 MFloatArray& weights);

protected:
// No protected members

private:
	MStatus		getWeightsHelper(bool useInfluenceIndex,
								 unsigned int influenceIndex,
								 const MDagPath& path,
								 const MObject& components,
								 unsigned int& influenceCount,
								 MDoubleArray& weights) const;

	MStatus		setWeightsHelper(const MDagPath& path,
								 const MObject& components,
								 bool useInfluenceIndex,
								 unsigned int influenceIndex,
								 const MIntArray& infArray,
								 const MDoubleArray& wtArray,
								 bool normalize /* = true */,
								 MDoubleArray *oldValues /* = NULL */);

};

#ifdef _WIN32
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MFnSkinCluster */
