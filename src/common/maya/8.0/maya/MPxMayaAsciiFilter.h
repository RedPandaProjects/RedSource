#ifndef _MPxMayaAsciiFilter
#define _MPxMayaAsciiFilter
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS DESCRIPTION (MPxMayaAsciiFilter)
//
//  This class allows the output to the Maya Ascii (.ma) file format to be 
//	filtered by a plug-in. This can be used to, for example, partition a scene
//	into several files which have been each filtered to write out different 
//	parts of the scene.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES

#include <maya/MPxFileTranslator.h>
#include <maya/MFileObject.h>

// *****************************************************************************

// DECLARATIONS

class MObject;
class MPlug;
class MFileIO;
class MDagPath;
class MFileObject;

// MPxMayaAsciiFilterOutput is used to allow output to the Maya ASCII file.
// Simply use the output operator (<<) to write a char* buffer to the output
// stream.
class OPENMAYA_EXPORT MPxMayaAsciiFilterOutput
{
public:
	MPxMayaAsciiFilterOutput(void* outputFile);

	MPxMayaAsciiFilterOutput&		operator << (const char* data);	

protected:
	// No protected members

private:
	void*				file;

};

// *****************************************************************************

// CLASS DECLARATION (MPxMayaAsciiFilter)

/// Translator to output filtered Maya ASCII files. (OpenMaya)
/**
  Output filtered Maya ASCII files.
*/
#ifdef _WIN32
#pragma warning(disable: 4522)
#endif // _WIN32

class OPENMAYA_EXPORT MPxMayaAsciiFilter : public MPxFileTranslator
{
public:
	///
						MPxMayaAsciiFilter ();
	///
				virtual ~MPxMayaAsciiFilter ();	
	///
	virtual bool		haveWriteMethod() const;
	///
	virtual bool		haveReadMethod() const;
	///
	virtual MStatus		reader ( const MFileObject& file,
								 const MString& optionsString,
								 FileAccessMode mode);
	///
	virtual MStatus		writer ( const MFileObject& file,
								 const MString& optionsString,
								 FileAccessMode mode);

protected:
	
	///
	const MFileObject	file() const;
	///
	virtual MStatus		processReadOptions(const MString& optionsString);
	///
	virtual MStatus		processWriteOptions(const MString& optionsString);
	///
	virtual	bool		writesRequirements(  ) const;	
	///
	virtual	bool		writesCreateNode( const MObject& node ) const;	
	///
	virtual	bool		writesSetAttr( const MPlug& srcPlug ) const;
	///
	virtual	bool		writesConnectAttr( const MPlug& srcPlug,
										   const MPlug& destPlug ) const;
	///
	virtual	bool		writesDisconnectAttr( const MPlug& srcPlug,
											  const MPlug& destPlug ) const;
	///
	virtual	bool		writesParentNode( const MDagPath& parent, const MDagPath& child ) const;
	///
	virtual	bool		writesSelectNode( const MObject& node ) const;
	///
	virtual	bool		writesFileReference( const MFileObject& referenceFile ) const;
	///
	virtual MStatus		writePostHeader( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePostRequires( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePreCreateNodesBlock( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePostCreateNodesBlock( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePreConnectAttrsBlock( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePostConnectAttrsBlock( MPxMayaAsciiFilterOutput& fileIO );
	///
	virtual MStatus		writePreTrailer( MPxMayaAsciiFilterOutput& fileIO );

private:
	
	MFileObject			fileObject;

};

#ifdef _WIN32
#pragma warning(default: 4522)
#endif // _WIN32

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MPxMayaAsciiFilter */
